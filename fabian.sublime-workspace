{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"str",
				"stream0"
			],
			[
				"cudaStre",
				"cudaStreamSynchronize\tcudaStreamSynchronize"
			],
			[
				"thre",
				"thread_count"
			],
			[
				"CUDAME",
				"cudaMemcpyDeviceToHost"
			],
			[
				"size",
				"size_t"
			],
			[
				"h_",
				"h_matrix"
			],
			[
				"matr",
				"matrix-"
			],
			[
				"d_ma",
				"d_matrix"
			],
			[
				"mat",
				"matrix-"
			],
			[
				"cuda",
				"cudaMemcpy\tcudaMemcpy"
			],
			[
				"cudaCreate",
				"cudaStreamCreate\tcudaStreamCreate"
			],
			[
				"ma",
				"matrix-"
			],
			[
				"time",
				"time"
			],
			[
				"err",
				"error"
			],
			[
				"h_ma",
				"h_matrix"
			],
			[
				"Cuda",
				"cudaError"
			],
			[
				"error",
				"checkCudaErrors"
			],
			[
				"th",
				"thrust"
			],
			[
				"gpu",
				"gpu_time_spent"
			],
			[
				"both",
				"both_time_spent"
			],
			[
				"clo",
				"clock\tclock"
			],
			[
				"aver",
				"average_cpu"
			],
			[
				"dura",
				"durations_cpu"
			],
			[
				"dur",
				"durations_gpu"
			],
			[
				"for",
				"for\tFor Loop"
			],
			[
				"block",
				"blockIdx\tblockIdx"
			],
			[
				"cu",
				"cudaMemcpy\tcudaMemcpy"
			],
			[
				"ti",
				"tid"
			],
			[
				"off",
				"addr_offs"
			],
			[
				"mi",
				"min"
			],
			[
				"pr",
				"printf\tprintf …"
			],
			[
				"idx",
				"threadIdx"
			],
			[
				"tid",
				"threadIdx\tthreadIdx"
			],
			[
				"blo",
				"block_id"
			],
			[
				"min",
				"minval"
			],
			[
				"prin",
				"print_matrixx"
			],
			[
				"get",
				"getMax"
			],
			[
				"arr",
				"arrlen"
			],
			[
				"doubl",
				"double"
			],
			[
				"see",
				"seed"
			],
			[
				"sed",
				"seed_opt"
			],
			[
				"max",
				"maxval"
			],
			[
				"Ser",
				"Serial3"
			],
			[
				"ser",
				"Serial"
			],
			[
				"byte",
				"bytecnt"
			],
			[
				"byt",
				"bytecnt"
			],
			[
				"las",
				"temp_last"
			],
			[
				"Sel",
				"Serial"
			],
			[
				"beg",
				"begin"
			],
			[
				"pri",
				"println"
			],
			[
				"set",
				"setDevicePin"
			],
			[
				"setd",
				"setDeviceName"
			],
			[
				"in",
				"inc\t#include <…>"
			],
			[
				"re",
				"return"
			],
			[
				"uin",
				"uint8_t"
			],
			[
				"out",
				"outFile"
			],
			[
				"rea",
				"ready"
			],
			[
				"Disa",
				"Display"
			],
			[
				"SD",
				"SD_CS"
			],
			[
				"er",
				"errno"
			],
			[
				"print",
				"println"
			],
			[
				"ca",
				"catch"
			],
			[
				"def",
				"define"
			],
			[
				"SPI",
				"SPI_CS"
			],
			[
				"Defa",
				"DEFAULT_POS_Y"
			],
			[
				"defa",
				"DEFAULT_POS_X"
			],
			[
				"Ima",
				"ImageSaver"
			],
			[
				"cl",
				"class\tclass-..-(class)"
			],
			[
				"star",
				"start"
			],
			[
				"d_",
				"d_matrix"
			],
			[
				"t",
				"tp\ttemplate <typename ${1:_InputIter}>"
			],
			[
				"temp",
				"b_temp"
			],
			[
				"lock",
				"locks"
			],
			[
				"lo",
				"locks_h"
			],
			[
				"c",
				"cmem\tcudaMemcpy"
			],
			[
				"bloc",
				"block_size"
			],
			[
				"__",
				"__s\t__syncthreads()"
			],
			[
				"f",
				"fprintf\tfprintf …"
			],
			[
				"opt",
				"optarg"
			],
			[
				"bo",
				"blockIdx"
			],
			[
				"_",
				"__global__"
			],
			[
				"nai",
				"naive_aproach"
			],
			[
				"b",
				"block"
			],
			[
				"thr",
				"threadIdx"
			],
			[
				"var",
				"var_count"
			],
			[
				"tid_",
				"tid_temp"
			],
			[
				"DEV",
				"DEV_ID"
			],
			[
				"na",
				"naive_aproach_single_cuda"
			],
			[
				"p",
				"printf\tprintf …"
			],
			[
				"te",
				"temp_p"
			],
			[
				"d",
				"d_matrix"
			],
			[
				"len",
				"length"
			],
			[
				"le",
				"length"
			],
			[
				"fre",
				"free"
			],
			[
				"check",
				"checkCudaErrors"
			],
			[
				"che",
				"checkCudaErrors"
			],
			[
				"si",
				"size_t"
			],
			[
				"de",
				"dev"
			],
			[
				"div",
				"divide"
			],
			[
				"du",
				"durations"
			],
			[
				"free",
				"free_matrix"
			],
			[
				"rev",
				"revisions"
			],
			[
				"revi",
				"revisions_opt"
			],
			[
				"usage",
				"usage_str"
			],
			[
				"usag",
				"usage_str"
			],
			[
				"usa",
				"usage"
			],
			[
				"NV",
				"NVCCFLAGS"
			],
			[
				"host",
				"HOST_COMPILER_ARGS"
			],
			[
				"Hos",
				"HOST_COMPILER_ARGS"
			],
			[
				"u",
				"usage_msg"
			],
			[
				"Ho",
				"HOST_COMPILER_ARGS"
			],
			[
				"io_",
				"io_info"
			],
			[
				"i_o",
				"i_info"
			],
			[
				"erro",
				"error_exit"
			],
			[
				"inc",
				"inc\t#include \"…\""
			],
			[
				"io",
				"io_info"
			],
			[
				"st",
				"struct\tstruct"
			],
			[
				"cm",
				"cmalmng\tcudaMallocManaged"
			],
			[
				"supp",
				"supp_list"
			],
			[
				"pag",
				"page"
			],
			[
				"ele",
				"elem"
			],
			[
				"list",
				"mapid_list"
			],
			[
				"info",
				"info"
			],
			[
				"mapid",
				"mapid_ref"
			],
			[
				"map",
				"mapid_t"
			],
			[
				"get_",
				"get_mapinfo"
			],
			[
				"new",
				"new_id"
			],
			[
				"el",
				"else"
			]
		]
	},
	"buffers":
	[
		{
			"file": "min_max.cpp",
			"settings":
			{
				"buffer_size": 1907,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "resources.cu",
			"settings":
			{
				"buffer_size": 5944,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "io.cpp",
			"settings":
			{
				"buffer_size": 4562,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "implementations.cu",
			"settings":
			{
				"buffer_size": 7728,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "implementations_cpu.cu",
			"settings":
			{
				"buffer_size": 2592,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Cuda took: 8.530000 seconds\nCPU took: 2.650000 seconds",
			"settings":
			{
				"buffer_size": 54,
				"line_ending": "Unix",
				"name": "Cuda took: 8.530000 seconds"
			}
		},
		{
			"file": "resources.h",
			"settings":
			{
				"buffer_size": 615,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "Makefile",
			"settings":
			{
				"buffer_size": 1207,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "io.h",
			"settings":
			{
				"buffer_size": 332,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "implementations.h",
			"settings":
			{
				"buffer_size": 276,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "implementations.cu:258: void par_alg_inc_blocks(double *, do\nuble *, double *, int, int): block: [3,0,0], thread: [0,0,0]\n Assertion `minval[addr_offs] == 0.0` failed.               \nimplementations.cu:258: void par_alg_inc_blocks(double *, do\nuble *, double *, int, int): block: [3,0,0], thread: [1,0,0]\n Assertion `minval[addr_offs] == 0.0` failed.               \nimplementations.cu:258: void par_alg_inc_blocks(double *, do\nuble *, double *, int, int): block: [3,0,0], thread: [2,0,0]\n Assertion `minval[addr_offs] == 0.0` failed.               \nimplementations.cu:258: void par_alg_inc_blocks(double *, do\nuble *, double *, int, int): block: [2,0,0], thread: [0,0,0]\n Assertion `minval[addr_offs] == 0.0` failed.               \nimplementations.cu:258: void par_alg_inc_blocks(double *, do\nuble *, double *, int, int): block: [2,0,0], thread: [1,0,0]\n Assertion `minval[addr_offs] == 0.0` failed.               \nimplementations.cu:258: void par_alg_inc_blocks(double *, do\nuble *, double *, int, int): block: [2,0,0], thread: [2,0,0]\n Assertion `minval[addr_offs] == 0.0` failed.               \nimplementations.cu:258: void par_alg_inc_blocks(double *, do\nuble *, double *, int, int): block: [0,0,0], thread: [0,0,0]\n Assertion `minval[addr_offs] == 0.0` failed.               \nimplementations.cu:258: void par_alg_inc_blocks(double *, do\nuble *, double *, int, int): block: [0,0,0], thread: [1,0,0]\n Assertion `minval[addr_offs] == 0.0` failed.               \nimplementations.cu:258: void par_alg_inc_blocks(double *, do\nuble *, double *, int, int): block: [0,0,0], thread: [2,0,0]\n Assertion `minval[addr_offs] == 0.0` failed.               \nCUDA error at resources.cu:141 code=710(cudaErrorAssert) \"er\nror\"                                                        \nmake: *** [check] Fehler 1                                  \n[mirza@herz gpu_minmax_alg]$ make                           \n./min_max -v 1000 -w 3 -c 4 -i 3 -t 3                       \nCuda took: 6.040000 seconds                                 \nCPU took: 6.040000 seconds                                  \n1000,3,4,6.04,6.04,3,1560546250                             \n[mirza@herz gpu_minmax_alg]$                                \n",
			"settings":
			{
				"buffer_size": 2196,
				"line_ending": "Unix",
				"name": "Terminal (bash)",
				"read_only": true,
				"scratch": true
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 137.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"cuda",
				"Set Syntax: CUDA C++"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"termin",
				"Terminal View: Open Bash Terminal"
			],
			[
				"termi",
				"Terminal View: Open Bash Terminal"
			],
			[
				"c++",
				"Set Syntax: C++"
			],
			[
				"",
				"Bookmarks: Toggle"
			],
			[
				"book",
				"Bookmarks: Toggle"
			],
			[
				"dic",
				"Dictionaries: Set Language"
			],
			[
				"make",
				"Set Syntax: Makefile"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			]
		],
		"width": 444.0
	},
	"console":
	{
		"height": 174.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/fabian/Schreibtisch/gpu/cuda/gpu_minmax_alg"
	],
	"file_history":
	[
		"/home/fabian/Schreibtisch/gpu/cuda/gpu_minmax_alg/resources.h",
		"/home/fabian/Schreibtisch/gpu/cuda/gpu_minmax_alg/cuda_deque.h",
		"/home/fabian/Schreibtisch/gpu/cuda/gpu_minmax_alg/implementations_cpu.h",
		"/home/fabian/Schreibtisch/gpu/cuda/gpu_minmax_alg/implementations.h",
		"/home/fabian/Schreibtisch/gpu/cuda/gpu_minmax_alg/fabian_thesis/project/implementations_cpu.cpp",
		"/home/fabian/Schreibtisch/gpu/cuda/gpu_minmax_alg/implementations_cpu.cu",
		"/home/fabian/Schreibtisch/gpu/cuda/gpu_minmax_alg/errors.cpp",
		"/home/fabian/Schreibtisch/gpu/cuda/gpu_minmax_alg/common/inc/timer.h",
		"/home/fabian/Schreibtisch/gpu/cuda/gpu_minmax_alg/io.cpp",
		"/home/fabian/Schreibtisch/gpu/cuda/gpu_minmax_alg/resources.cu",
		"/home/fabian/Schreibtisch/gpu/cuda/gpu_minmax_alg/cuda_deque.cu",
		"/home/fabian/Schreibtisch/gpu/gpu_minmax_alg/min_max.cpp",
		"/home/fabian/Schreibtisch/gpu/gpu_minmax_alg/min_max",
		"/home/fabian/Dokumente/gpu_minmax_alg/io.cpp",
		"/home/fabian/Dokumente/gpu_minmax_alg/io.h",
		"/home/fabian/Dokumente/gpu_minmax_alg/fabian_thesis/project/common/findgllib.mk",
		"/home/fabian/Dokumente/vrml/src/bilderstutzen/Image.h",
		"/home/fabian/Dokumente/vrml/src/bilderstutzen/Sender.h",
		"/home/fabian/Dokumente/vrml/src/bilderstutzen/Cam.h",
		"/home/fabian/Dokumente/vrml/src/bilderstutzen/Trigger.h",
		"/home/fabian/Dokumente/vrml/src/bilderstutzen/Sender.cpp",
		"/home/fabian/Dokumente/vrml/src/bilderstutzen/bilderstutzen.ino",
		"/home/fabian/Dokumente/vrml/src/bilderstutzen/Trigger.cpp",
		"/home/fabian/Dokumente/vrml/src/bilderstutzen/Cam.cpp",
		"/home/fabian/Dokumente/vrml/src/bilderstutzen/Display.cpp",
		"/home/fabian/Dokumente/vrml/src/bilderstutzen/Image.cpp",
		"/home/fabian/Dokumente/vrml/src/bilderstutzen/ImageSaver.cpp",
		"/home/fabian/Dokumente/vrml/src/bilderstutzen/HC-06-BT/src/bluetooth.cpp",
		"/home/fabian/Dokumente/vrml/src/bilderstutzen/HC-06-BT/src/bluetooth.h",
		"/home/fabian/Dokumente/vrml/src/bilderstutzen/JPEGDecoder/keywords.txt",
		"/home/fabian/Dokumente/vrml/src/bilderstutzen/Arduino/README.md",
		"/home/fabian/Dokumente/vrml/src/bilderstutzen/Arduino/ArduCAM/examples/Shield_V2/ArduCAM_Shield_V2_Digital_Camera/ArduCAM_Shield_V2_Digital_Camera.ino",
		"/P/test.c",
		"/home/fabian/Dokumente/vrml/src/bilderstutzen/JPEGDecoder/src/JPEGDecoder.cpp",
		"/C/Users/fabia/Desktop/openjpeg.h",
		"/Y/vrml/src/bilderstutzen/ITEADLIB_Arduino_WeeESP8266/ESP8266.cpp",
		"/Y/vrml/src/bilderstutzen/bilderstutzen.ino_old",
		"/Y/vrml/src/bilderstutzen/HC-06-BT/examples/set_device_name.ino",
		"/C/Users/fabia/Documents/Arduino/libraries/SoftwareSerial/SoftwareSerial.h",
		"/C/Users/fabia/Documents/Arduino/libraries/SoftwareSerial/SoftwareSerial.cpp",
		"/Y/vrml/src/bilderstutzen/scr_Bluetoothreceiver/receiver.java",
		"/Y/bak-arbeit/project/resources.cu",
		"/Y/bak-arbeit/project/implementations_cpu.cpp",
		"/C/Users/fabia/Documents/Arduino/libraries/HC-06-BT/bluetooth.h",
		"/C/Users/fabia/Documents/Arduino/libraries/HC-06-BT/bluetooth.cpp",
		"/Y/vrml/src/bilderstutzen/JPEGDecoder/src/picojpeg.c",
		"/Y/vrml/src/bilderstutzen/ImageSaver.h",
		"/Y/vrml/src/bilderstutzen/Display.h",
		"/Y/vrml/src/bilderstutzen/JPEGDecoder/src/JPEGDecoder.h",
		"/Y/bak-arbeit/project/errors.cpp",
		"/Y/bak-arbeit/project/io.cpp",
		"/Y/vrml/src/bilderstutzen/JPEGDecoder/src/picojpeg.h",
		"/Y/vrml/src/bilderstutzen/CImg/examples/tutorial.cpp",
		"/Y/vrml/src/bilderstutzen/CImg/examples/use_draw_gradient.cpp",
		"/Y/vrml/src/bilderstutzen/CImg/examples/image2ascii.cpp",
		"/Y/vrml/src/bilderstutzen/CImg/CImg.h",
		"/Y/vrml/src/bilderstutzen/Arduino/ArduCAM/ArduCAM.h",
		"/C/Users/fabia/Documents/Arduino/libraries/UTFT4ArduCAM_SPI/UTFT_SPI.cpp",
		"/Y/vrml/src/bilderstutzen/Arduino/UTFT4ArduCAM_SPI/UTFT_SPI.h",
		"/Y/vrml/src/bilderstutzen/Arduino/ArduCAM_Touch/ArduCAM_Touch.cpp",
		"/Y/vrml/src/bilderstutzen/Arduino/ArduCAM_Touch/examples/touchpaint/touchpaint.ino",
		"/Y/vrml/src/bilderstutzen/Arduino/ArduCAM/ArduCAM.cpp",
		"/Z/id_rsa.pub",
		"/Y/vrml/src/bilderstutzen/Arduino/ArduCAM/examples/Shield_V2/ArduCAM_Shield_V2_Capture2SD/ArduCAM_Shield_V2_Capture2SD.ino",
		"/Y/microcontroller/task1/libglcd/glcd.c",
		"/Y/vrml/src/bilderstutzen/Arduino/ArduCAM/memorysaver.h",
		"/Y/vrml/src/bilderstutzen/Arduino/ArduCAM/examples/REVC/ArduCAM_REVC_Capture2SD/ArduCAM_REVC_Capture2SD.ino",
		"/C/Users/fabia/Documents/Arduino/libraries/ArduCAM/memorysaver.h",
		"/Y/vrml/src/bilderstutzen/Arduino/UTFT4ArduCAM_SPI/UTFT_SPI.cpp",
		"/Y/vrml/src/bilderstutzen/Arduino/UTFT4ArduCAM_SPI/DefaultFonts_SPI.c",
		"/Y/vrml/src/bilderstutzen/ITEADLIB_Arduino_WeeESP8266/ESP8266.h",
		"/Y/vrml/src/bilderstutzen/Image.h",
		"/Y/vrml/src/bilderstutzen/Image.cpp",
		"/Y/choices",
		"/Y/smart-innovation/main.tex",
		"/C/Users/fabia/Desktop/lcc/RUN-CREA.cmd",
		"/C/Users/fabia/Desktop/lcc/ccminer.conf",
		"/C/Users/fabia/Desktop/lcc/start.bat",
		"/Y/dalu/task2/DALU_Bsp2/real-main.cpp",
		"/C/Users/fabia/Documents/Monero/wallets/my money/my money.keys",
		"/Y/bitcoin_forks.md",
		"/Y/bak-arbeit/project/Makefile",
		"/Y/bak-arbeit/project/resources.h",
		"/Y/bak-arbeit/project/io.h",
		"/Y/bak-arbeit/project/implementations.h",
		"/Y/bak-arbeit/project/implementations.cu",
		"/Y/bak-arbeit/project/benchmark.sh",
		"/Y/bak-arbeit/project/lin-sys-solv.cpp",
		"/C/Users/fabia/Desktop/Suchtbaum.java",
		"/Y/bak-arbeit/project/cuda_schedule.h",
		"/home/fabian/dokumente/bak-arbeit/project/errors.cpp",
		"/home/fabian/dokumente/bak-arbeit/project/errors.h",
		"/home/fabian/dokumente/bak-arbeit/project/results.csv",
		"/home/fabian/dokumente/progos/pintos-progos/userprog/syscall.c",
		"/home/fabian/dokumente/bak-arbeit/project/CUDA error at implementations.cu",
		"/home/fabian/dokumente/bak-arbeit/project/Lock.h",
		"/home/fabian/dokumente/bak-arbeit/project/io.h",
		"/home/fabian/dokumente/betriebssysteme/1a/mydiff.c",
		"/home/fabian/dokumente/bak-arbeit/project/results.txt",
		"/home/fabian/dokumente/bak-arbeit/project/implementations_cpu.cpp",
		"/home/fabian/dokumente/betriebssysteme/1a/ispalindrom.c",
		"/home/fabian/dokumente/bak-arbeit/project/implementations_cpu.h",
		"/home/fabian/dokumente/bak-arbeit/project/common/inc/helper_cuda.h",
		"/home/fabian/dokumente/bak-arbeit/project/common/inc/helper_functions.h",
		"/home/fabian/dokumente/bak-arbeit/project/common/inc/timer.h",
		"/home/fabian/dokumente/bak-arbeit/project/common/inc/helper_image.h",
		"/home/fabian/dokumente/bak-arbeit/NVIDIA_CUDA-8.0_Samples/0_Simple/simplePrintf/simplePrintf.cu",
		"/home/fabian/dokumente/bak-arbeit/project/implementations.cu.old",
		"/home/fabian/dokumente/bak-arbeit/NVIDIA_CUDA-8.0_Samples/0_Simple/simplePrintf/Makefile",
		"/home/fabian/dokumente/bak-arbeit/project/inc/helper_functions.h",
		"/home/fabian/dokumente/bak-arbeit/project/lin-sys-solv.c",
		"/home/fabian/dokumente/bak-arbeit/project/lin-sys-solv.cpp",
		"/home/fabian/dokumente/bak-arbeit/project/errors.c",
		"/home/fabian/dokumente/bak-arbeit/project/io.c",
		"/home/fabian/dokumente/parcomp/pcrepo/image.c",
		"/home/fabian/dokumente/bak-arbeit/project/implementations.cu",
		"/usr/local/cuda-8.0/targets/x86_64-linux/include/host_defines.h",
		"/home/fabian/dokumente/bak-arbeit/project/implementations.c",
		"/usr/local/cuda-8.0/targets/x86_64-linux/include/fatbinary.h",
		"/home/fabian/dokumente/bak-arbeit/NVIDIA_CUDA-8.0_Samples/5_Simulations/nbody/Makefile",
		"/home/fabian/dokumente/betriebssysteme/websh.c",
		"/home/fabian/dokumente/bak-arbeit/project/implementaions.cu",
		"/home/fabian/dokumente/betriebssysteme/2/schedule.c",
		"/home/fabian/dokumente/bak-arbeit/project/lin-sys-solv.cu",
		"/home/fabian/dokumente/betriebssysteme/Makefile",
		"/home/fabian/dokumente/betriebssysteme/3/Makefile",
		"/home/fabian/dokumente/betriebssysteme/3/battleships/Makefile",
		"/home/fabian/dokumente/betriebssysteme/2/rshutdown.c"
	],
	"find":
	{
		"height": 46.0
	},
	"find_in_files":
	{
		"height": 113.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"* allocate_resources",
			"stream",
			"hostal",
			"malloc",
			"max_threads",
			"par_alg_thrust",
			"thrust::",
			"arbitrary_functor",
			"ntf",
			"info->a_opt",
			"info",
			"->run_nr",
			"->",
			"dur",
			"pu",
			"gpu",
			"cpu",
			"both",
			"begin",
			"allocate_recources",
			"&info",
			"gpu",
			"average",
			"durations",
			"print_matrix",
			"free_matrix",
			"cudaFree",
			"par_alg_inc_blocks",
			"min",
			"matrix->arrlen",
			"par_alg_inc_win",
			"matrix->h_",
			")",
			"print_matr",
			"print_matrix",
			"malloc",
			"m",
			"Null",
			"arrlen",
			"L",
			"U",
			"matrix->d_",
			"matrix->",
			"min",
			"d_solution",
			"cuda_deque",
			"cuda-memcheck",
			"print",
			"par_alg_inc_win"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "min_max.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1907,
						"regions":
						{
						},
						"selection":
						[
							[
								1336,
								1336
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 567.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "resources.cu",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5944,
						"regions":
						{
						},
						"selection":
						[
							[
								3107,
								3107
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/CUDA Snippets/cuda-c++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 5.0,
						"translation.y": 1287.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "io.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4562,
						"regions":
						{
						},
						"selection":
						[
							[
								1346,
								1346
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "implementations.cu",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7728,
						"regions":
						{
						},
						"selection":
						[
							[
								4680,
								4680
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/CUDA Snippets/cuda-c++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 126.0,
						"translation.y": 3201.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "implementations_cpu.cu",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2592,
						"regions":
						{
						},
						"selection":
						[
							[
								1964,
								1964
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/CUDA Snippets/cuda-c++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1648.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 5,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 54,
						"regions":
						{
						},
						"selection":
						[
							[
								54,
								54
							]
						],
						"settings":
						{
							"auto_name": "Cuda took: 8.530000 seconds",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 6,
					"file": "resources.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 615,
						"regions":
						{
						},
						"selection":
						[
							[
								470,
								470
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 62.0,
						"translation.y": 174.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "Makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1207,
						"regions":
						{
						},
						"selection":
						[
							[
								1179,
								1179
							]
						],
						"settings":
						{
							"syntax": "Packages/Makefile/Makefile.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1069.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "io.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 332,
						"regions":
						{
						},
						"selection":
						[
							[
								169,
								169
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "implementations.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 276,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 10,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2196,
						"regions":
						{
						},
						"selection":
						[
							[
								2164,
								2164
							]
						],
						"settings":
						{
							"auto_complete": false,
							"auto_complete_commit_on_tab": false,
							"caret_style": "blink",
							"color_scheme": "Packages/TerminalView/TerminalView.hidden-tmTheme",
							"draw_centered": false,
							"draw_indent_guides": false,
							"draw_white_space": "none",
							"gutter": false,
							"highlight_line": false,
							"scroll_past_end": false,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"terminal_view": true,
							"terminal_view_activate_args":
							{
								"cmd": "/bin/bash -l",
								"cwd": "/home/fabian/Schreibtisch/gpu/cuda/gpu_minmax_alg",
								"keep_open": false,
								"syntax": null,
								"title": "Terminal (bash)"
							},
							"terminal_view_last_cursor_pos":
							[
								35,
								29
							],
							"word_wrap": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "Makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1207,
						"regions":
						{
						},
						"selection":
						[
							[
								1156,
								1156
							]
						],
						"settings":
						{
							"syntax": "Packages/Makefile/Makefile.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 825.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 35.0
	},
	"input":
	{
		"height": 46.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				2
			],
			[
				1,
				0,
				2,
				1
			],
			[
				1,
				1,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.49072969307,
			1.0
		],
		"rows":
		[
			0.0,
			0.0785139810646,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 175.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Makefile/Make.sublime-build",
	"project": "fabian.sublime-project",
	"replace":
	{
		"height": 66.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"res",
				"resources.h"
			],
			[
				"imp",
				"implementations.h"
			],
			[
				"mak",
				"Makefile"
			],
			[
				"impl",
				"fabian_thesis/project/implementations_cpu.cpp"
			],
			[
				"io",
				"io.cpp"
			],
			[
				"imple",
				"fabian_thesis/project/implementations_cpu.cpp"
			],
			[
				"reso",
				"resources.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 392.0
	},
	"selected_group": 2,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 272.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
